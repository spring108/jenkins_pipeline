pipeline {
  agent {
    docker {     
      // need to install two plugins: "Docker" & "Docker Pipeline"
      // need echo '{"insecure-registries" : ["nexus-srv:8123"]}' > /etc/docker/daemon.json
      // need service docker restart
      image 'nexus-srv:8123/build_environment:v1.0.0'
      registryCredentialsId 'nexus_admin'    // must be in Jenkins
      }
    }

/*
  parameters {
    password(name: "nexus_pass", defaultValue: "", description: "Введите пароль от Nexus")
    }
*/

  stages {
    stage('Copy PROJECT source from GitHub') {
      steps {
        git(url: 'https://github.com/boxfuse/boxfuse-sample-java-war-hello.git', branch: 'master', poll: true)
        }
      }

/*
    stage('Wait User Permission') {
      steps {
        input {
          message "Confirm to continue"
          ok "Go!"
          }
        }
      }
*/

    stage('Build war-file') {
      steps {
        sh 'cd ./boxfuse-sample-java-war-hello && mvn package'
        }
      }



    stage('Copy FILES from GitHub') {
      steps {
        git(url: 'https://github.com/spring108/jenkins_pipeline.git', branch: 'master', poll: true, credentialsId: 'git')
        }
      }


    stage('Prepare docker service') {
      steps {
        sh '''echo '{"insecure-registries" : ["nexus-srv:8123"]}' > /etc/docker/daemon.json
        service docker restart
        docker login nexus-srv:8123 --username admin --password $nexus_pass
EOF'''
        }
      }

    stage('Copy artifact (with rename) nearly Dockerfile') {
      steps {
        sh 'cp ./boxfuse-sample-java-war-hello/target/hello-1.0.war ./jenkins_pipeline/jenkins/hello.war'
        }
      }


    stage('Make docker image by Dockerfile and hello.war') {
      steps {
        sh 'cd ./jenkins_pipeline/jenkins && docker build -t myweb2:v2.0.0 .'
        sh '''docker tag myweb2:v2.0.0 nexus-srv:8123/myweb2:v2.0.0 && docker push nexus-srv:8123/myweb2:v2.0.0'''
        }
      }

    stage('Run docker on prod-srv') {
      steps {
        sh 'ssh-keyscan -H prod-srv >> ~/.ssh/known_hosts'
        sh '''ssh root@prod-srv << EOF
	      docker pull nexus-srv:8123/myweb2:v2.0.0
        docker run -d -p 8080:8080 nexus-srv:8123/myweb2:v2.0.0
EOF'''
        }
      }


    }
  }